{"name":"Gedcomx-php","tagline":"PHP Libraries for GEDCOM X Processing","body":"#GedcomX - PHP\r\n\r\n[![Build Status](https://travis-ci.org/FamilySearch/gedcomx-php.svg?branch=master)](https://travis-ci.org/FamilySearch/gedcomx-php)\r\n\r\nGEDCOM X PHP is the PHP implementation of [GEDCOM X](http://www.gedcomx.org), including GEDCOM X extension projects.\r\n\r\n[Read about how to get involved.](http://www.gedcomx.org/Community.html)\r\n\r\n#Installation\r\n\r\nGEDCOM X PHP uses [composer](https://getcomposer.org) to manage dependencies. To install, add the following to your compser.json file and then run the `composer install` command.\r\n\r\n```json\r\n{\r\n    \"require\": {\r\n        \"gedcomx/gedcomx-php\": \"dev-master\"\r\n    }\r\n}\r\n```\r\n\r\n# Serialize GEDCOM X\r\n \r\n```php\r\nuse Gedcomx\\Gedcomx;\r\nuse Gedcomx\\Conclusion\\Person;\r\nuse Gedcomx\\Conclusion\\Relationship;\r\nuse Gedcomx\\Conclusion\\Document;\r\nuse Gedcomx\\Source\\SourceDescription;\r\n...\r\n\r\n\r\n$gedcomx = new Gedcomx();\r\n$person1 = new Person();\r\n$relationship1 = new Relationship();\r\n$document1 = new Document();\r\n$source1 = new SourceDescription();\r\n...\r\n$gedcomx->setPersons(array(person1, ...));\r\n$gedcomx->setRelationships(array(relationship1, ...));\r\n$gedcomx->setDocuments(array(document1, ...));\r\n$gedcomx->setSourceDescriptions(array(source1, ...));\r\n\r\n$json = $gedcomx->toJson();\r\n```\r\n\r\n# Deserialize GEDCOM X\r\n \r\n```php\r\nuse Gedcomx\\Gedcomx;\r\nuse Gedcomx\\Conclusion\\Person;\r\nuse Gedcomx\\Conclusion\\Relationship;\r\nuse Gedcomx\\Conclusion\\Document;\r\nuse Gedcomx\\Source\\SourceDescription;\r\n\r\n\r\n/**\r\n * @var string\r\n */\r\n$json = ...;\r\n\r\n/**\r\n * @var Gedcomx\r\n */\r\n$gedcomx = new Gedcomx(json_decode($json, true));\r\n\r\n/**\r\n * @var Person\r\n */\r\n$person1 = $gedcomx->getPersons()[0];\r\n\r\n/**\r\n * @var Relationship\r\n */\r\n$relationship1 = $gedcomx->getRelationships()[0];\r\n\r\n/**\r\n * @var Document\r\n */\r\n$document1 = $gedcomx->getDocuments()[0];\r\n\r\n/**\r\n * @var SourceDescription\r\n */\r\n$source1 = $gedcomx->getSourceDescriptions()[0];\r\n\r\n...\r\n```\r\n\r\n# Accessing a GEDCOM X RS API\r\n\r\n## Read the Person for the Current User\r\n\r\n```php\r\nuse Gedcomx\\Rs\\Client\\StateFactory;\r\nuse Gedcomx\\Rs\\Client\\PersonState;\r\nuse Gedcomx\\Conclusion\\Person;\r\n\r\n/**\r\n * @var StateFactory\r\n */\r\n$stateFactory = new StateFactory();\r\n\r\n/**\r\n * @var PersonState\r\n */\r\n$currentPerson = $stateFactory\r\n    ->newCollectionState(\"https://sandbox.familysearch.org/platform/collections/tree\") //read the collection\r\n    ->authenticateViaOAuth2Password(\"username\", \"password\", \"client_id\") //authenticate if needed\r\n    ->readPersonForCurrentUser(); //read the person for the current user\r\n\r\n/**\r\n * @var Person\r\n */\r\n$person = $currentPerson->getPerson();\r\n```\r\n\r\n\r\n## Search a Collection for Persons\r\n\r\n```php\r\nuse Gedcomx\\Rs\\Client\\StateFactory;\r\nuse Gedcomx\\Rs\\Client\\PersonSearchResultsState;\r\nuse Gedcomx\\Conclusion\\Person;\r\n\r\n/**\r\n * @var StateFactory\r\n */\r\n$stateFactory = new StateFactory();\r\n\r\n/**\r\n * @var PersonSearchResultsState\r\n */\r\n$searchResults = $stateFactory\r\n    ->newCollectionState(\"https://sandbox.familysearch.org/platform/collections/tree\") //read the collection\r\n    ->authenticateViaOAuth2Password(\"username\", \"password\", \"client_id\") //authenticate if needed\r\n    ->searchForPersons('givenName:Israel surname:Heaton gender:M birthDate:1880'); //search for Israel Heaton, b. 1880\r\n\r\n//process the results\r\n```\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}